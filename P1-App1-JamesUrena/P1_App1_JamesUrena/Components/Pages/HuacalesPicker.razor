@*<div class="col-auto input-group align-items-center">
    <label class="col-form-label input-group-text">Seleccione:</label>

    <InputSelect class="form-control form-select" @bind-Value="TipoId">
        <option disabled value="0">Seleccione un tipo de huacal</option>
        @foreach (var tipo in Tipos)
        {
            <option value="@tipo.TipoId">@tipo.TipoId - @tipo.Descripcion (Existencia: @tipo.Existencia)</option>
        }
    </InputSelect>

    <label class="col-form-label input-group-text">Cantidad:</label>
    <InputNumber class="form-control" id="quantity-input" @bind-Value="CantidadId" min="0" />

    <label class="col-form-label input-group-text">Precio:</label>
    <InputNumber class="form-control" id="price-input" @bind-Value="Precio" min="0" />

    <button type="button" class="btn btn-outline-success bi bi-plus" @onclick="TriggerSelection">
        Agregar
    </button>
</div>

@if (ErrorMensaje != null)
{
    <div class="alert alert-danger mt-2" role="alert">
        @ErrorMensaje
    </div>
}

@code {
    [Parameter]
    public List<TiposHuacales> Tipos { get; set; } = new();

    [Parameter]
    public int TipoId { get; set; }

    [Parameter]
    public int CantidadId { get; set; }

    [Parameter]
    public double Precio { get; set; }   // <- usa double porque en tus modelos es double

    [Parameter]
    public EventCallback<(TiposHuacales tipos, int cantidad, double precio)> OnHuacalSelected { get; set; }

    private string? ErrorMensaje { get; set; } = null;

    private async Task TriggerSelection()
    {
        ErrorMensaje = null;

        if (TipoId == 0)
        {
            ErrorMensaje = "Debe seleccionar un tipo de huacal";
            return;
        }

        if (CantidadId <= 0)
        {
            ErrorMensaje = "La cantidad debe ser mayor a 0";
            return;
        }

        if (Precio <= 0)
        {
            ErrorMensaje = "El precio debe ser mayor a 0";
            return;
        }

        var tipoSeleccionado = Tipos.Single(t => t.TipoId == TipoId);

        await OnHuacalSelected.InvokeAsync((tipoSeleccionado, CantidadId, Precio));

        // limpiar campos
        TipoId = 0;
        CantidadId = 0;
        Precio = 0;
    }
}
*@